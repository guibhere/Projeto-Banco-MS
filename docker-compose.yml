version: '3.8'

services:
  sqldb:
    image: postgres
    container_name: SqlDataBase
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - pgconf:/etc/postgresql
      - pglog:/var/log/postgresql
    environment:
      - POSTGRES_DB=DbContaCliente
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
    networks:
      - mynetwork

  api_conta_cliente:
    container_name: Api_Conta_Cliente
    ports:
      - 8080:8080
      - 80:80
    build:
      context: ./Api Conta Cliente/Api_Conta_Cliente/
      dockerfile: ./Docker/Dockerfile
    links:
      - sqldb
    depends_on:
      - "sqldb"
    networks:
      - mynetwork

  api_controle_transacao:
    container_name: Api_Controle_Transacao
    ports:
      - 90:90
    build:
      context: ./Api Controle Transacao/Api_Controle_Transacao/
      dockerfile: ./Docker/Dockerfile
    links:
      - dynamodb
      - redis
    depends_on:
      - dynamodb
      - redis
    networks:
      - mynetwork

  pgadmin:
    container_name: PgAdmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "postgres@email.com"
      PGADMIN_DEFAULT_PASSWORD: "1234"
    ports:
      - "15432:80"
    depends_on:
      - sqldb
    networks:
      - mynetwork

  splunk:
    #build: . 
    hostname: splunkenterprise
    image: splunk/splunk:latest
    environment:
      SPLUNK_START_ARGS: --accept-license
      SPLUNK_PASSWORD: 12345678
      SPLUNK_ENABLE_LISTEN: 9997
      SPLUNK_ADD: tcp 1514
    volumes:
      - opt-splunk-etc:/opt/splunk/etc
      - opt-splunk-var:/opt/splunk/var
    ports:
      - "8000:8000"
      - "9997:9997"
      - "8088:8088"
      - "1514:1514"
    networks:
      - mynetwork

  dynamodb:
    image: amazon/dynamodb-local:latest
    container_name: dynamodb
    hostname: dynamodb
    ports:
      - "8003:8003"
    volumes:
      - dynamodb-data:/home/dynamodblocal/data
    user: root
    command: "-jar DynamoDBLocal.jar -port 8003 -sharedDb -optimizeDbBeforeStartup -dbPath /home/dynamodblocal/data/"

    networks:
      - mynetwork

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      DYNAMO_ENDPOINT: "http://dynamodb:8003"
      AWS_REGION: "us-west-2"
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
    depends_on:
      - dynamodb
    networks:
      - mynetwork

  zookeeper:
    image: "bitnami/zookeeper:latest"
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami/zookeeper"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - mynetwork

  kafka:
    image: "bitnami/kafka:latest"
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - "kafka_data:/bitnami/kafka"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - mynetwork
  
  integrador:
    container_name: integrador_bacen
    environment:
      - Ambiente=Deploy
    build:
      context: ./Integrador Bacen/
      dockerfile: ./Docker/Dockerfile
    networks:
      - mynetwork

  redis:
      image: redis
      hostname: redis
      restart: always
      ports:
        - '6379:6379'
      command: redis-server --save 20 1 --loglevel warning --requirepass 1234
      environment:
        - ALLOW_EMPTY_PASSWORD=yes
      volumes: 
        - cachedata:/data
      networks:
        - mynetwork

volumes:
  pgdata:
    driver: local
  pgconf:
    driver: local
  pglog:
    driver: local
  opt-splunk-etc:
    driver: local
  opt-splunk-var:
    driver: local
  dynamodb-data:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  cachedata:
    driver: local

networks:
  mynetwork:
    driver: bridge
